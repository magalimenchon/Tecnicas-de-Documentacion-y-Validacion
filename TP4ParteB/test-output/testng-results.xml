<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="44" passed="34" failed="10" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-21T16:26:55 ART" name="Default suite" finished-at="2021-10-21T16:26:55 ART" duration-ms="487">
    <groups>
    </groups>
    <test started-at="2021-10-21T16:26:55 ART" name="Default test" finished-at="2021-10-21T16:26:55 ART" duration-ms="487">
      <class name="restaurant.test.testng.Tests">
        <test-method is-config="true" signature="beforeClassDatosProductos(int)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="beforeClassDatosProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassDatosProductos -->
        <test-method is-config="true" signature="beforeClassDatosRecetas(int)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="beforeClassDatosRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassDatosRecetas -->
        <test-method is-config="true" signature="beforeClassDatosIngredientes(int)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="beforeClassDatosIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassDatosIngredientes -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="13" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@18271936]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@7e057f43]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@7e057f43]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@231f98ef]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@18271936]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@18271936]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@8462f31]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="12" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@18271936]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@59402b8f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testDeStressCantidadStockDeIngrediente(restaurant.java.Ingrediente)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testDeStressCantidadStockDeIngrediente" data-provider="generarIngredientes" finished-at="2021-10-21T16:26:55 ART" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Ingrediente@231f98ef]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at restaurant.test.testng.Tests.testDeStressCantidadStockDeIngrediente(Tests.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeStressCantidadStockDeIngrediente -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lata Sprite]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lata Sprite]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BIG O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BIG O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lata Coca Cola]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testGananciaMayor(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testGananciaMayor" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGananciaMayor -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Retorti]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Retorti]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Retorti]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lata Sprite]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Lata Sprite]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PATATAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPreciosUnitarios(restaurant.java.Producto)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPreciosUnitarios" data-provider="generarProductos" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BIG O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreciosUnitarios -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@61c4eee0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@61c4eee0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@548a24a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@61c4eee0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@548a24a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@548a24a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@533bda92]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@533bda92]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@533bda92]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testPrimerLetraDistinta(restaurant.java.Receta)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testPrimerLetraDistinta" data-provider="generarRecetas" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[restaurant.java.Receta@548a24a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimerLetraDistinta -->
        <test-method signature="testThrowSinSaldoException(restaurant.java.Usuario)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testThrowSinSaldoException" data-provider="generador-usuarios" finished-at="2021-10-21T16:26:55 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homero Simpsonhomerojsimpson@springfield.com]]>
              </value>
            </param>
          </params>
          <exception class="restaurant.java.SinSaldoException">
            <full-stacktrace>
              <![CDATA[No tiene suficiente saldo
at restaurant.java.Usuario.descontarSaldo(Usuario.java:25)
at restaurant.test.testng.Tests.testThrowSinSaldoException(Tests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- restaurant.java.SinSaldoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThrowSinSaldoException -->
        <test-method signature="testThrowSinSaldoException(restaurant.java.Usuario)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testThrowSinSaldoException" data-provider="generador-usuarios" finished-at="2021-10-21T16:26:55 ART" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Barney Gomezel14gomez@springfield.com]]>
              </value>
            </param>
          </params>
          <exception class="restaurant.java.SinSaldoException">
            <full-stacktrace>
              <![CDATA[No tiene suficiente saldo
at restaurant.java.Usuario.descontarSaldo(Usuario.java:25)
at restaurant.test.testng.Tests.testThrowSinSaldoException(Tests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- restaurant.java.SinSaldoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThrowSinSaldoException -->
        <test-method signature="testThrowSinSaldoException(restaurant.java.Usuario)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testThrowSinSaldoException" data-provider="generador-usuarios" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edna Krabappelednak@springfield.com]]>
              </value>
            </param>
          </params>
          <exception class="restaurant.java.SinSaldoException">
            <full-stacktrace>
              <![CDATA[No tiene suficiente saldo
at restaurant.java.Usuario.descontarSaldo(Usuario.java:25)
at restaurant.test.testng.Tests.testThrowSinSaldoException(Tests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- restaurant.java.SinSaldoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThrowSinSaldoException -->
        <test-method signature="testThrowSinSaldoException(restaurant.java.Usuario)[pri:0, instance:restaurant.test.testng.Tests@483f6d77]" started-at="2021-10-21T16:26:55 ART" name="testThrowSinSaldoException" data-provider="generador-usuarios" finished-at="2021-10-21T16:26:55 ART" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homerohomerojsimpson@springfield.com]]>
              </value>
            </param>
          </params>
          <exception class="restaurant.java.SinSaldoException">
            <full-stacktrace>
              <![CDATA[No tiene suficiente saldo
at restaurant.java.Usuario.descontarSaldo(Usuario.java:25)
at restaurant.test.testng.Tests.testThrowSinSaldoException(Tests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- restaurant.java.SinSaldoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThrowSinSaldoException -->
      </class> <!-- restaurant.test.testng.Tests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
